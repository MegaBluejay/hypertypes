cabal-version: 1.12

-- This file has been generated from package.yaml by hpack version 0.31.1.
--
-- see: https://github.com/sol/hpack
--
-- hash: 6025132b4c04055ce04e02a85b7b4c371cb5ff4bd001fed0bbceb20981275ec5

name:           syntax-tree
version:        0.1.0.0
synopsis:       Typed ASTs
description:    Please see the README on GitHub at <https://github.com/lamdu/syntax-tree#readme>
category:       Algorithms, Compilers/Interpreters, Language, Logic, Unification
homepage:       https://github.com/lamdu/syntax-tree#readme
bug-reports:    https://github.com/lamdu/syntax-tree/issues
author:         Yair Chuchem
maintainer:     yairchu@gmail.com
copyright:      2018 Yair Chuchem"
license:        BSD3
license-file:   LICENSE
build-type:     Simple
extra-source-files:
    README.md
    ChangeLog.md

source-repository head
  type: git
  location: https://github.com/lamdu/syntax-tree

library
  exposed-modules:
      AST
      AST.Class
      AST.Class.Apply.TH
      AST.Class.Combinators
      AST.Class.Foldable
      AST.Class.Foldable.TH
      AST.Class.Functor.TH
      AST.Class.Has
      AST.Class.Infer
      AST.Class.Infer.Infer1
      AST.Class.Pointed.TH
      AST.Class.Recursive
      AST.Class.Traversable
      AST.Class.Traversable.TH
      AST.Class.Unify
      AST.Class.ZipMatch
      AST.Class.ZipMatch.TH
      AST.Combinator.ANode
      AST.Combinator.Compose
      AST.Combinator.Flip
      AST.Combinator.Pair
      AST.Diff
      AST.Infer
      AST.Infer.Blame
      AST.Infer.ScopeLevel
      AST.Infer.Term
      AST.Internal.TH
      AST.Knot
      AST.Knot.Ann
      AST.Knot.Ann.Arbitrary
      AST.Knot.Dict
      AST.Knot.Functor
      AST.Knot.Prune
      AST.Knot.Pure
      AST.Term.App
      AST.Term.FuncType
      AST.Term.Lam
      AST.Term.Let
      AST.Term.Map
      AST.Term.NamelessScope
      AST.Term.NamelessScope.InvDeBruijn
      AST.Term.Nominal
      AST.Term.Row
      AST.Term.Scheme
      AST.Term.Scheme.AlphaEq
      AST.Term.TypeSig
      AST.Term.Var
      AST.Unify
      AST.Unify.Apply
      AST.Unify.Binding
      AST.Unify.Binding.Save
      AST.Unify.Binding.ST
      AST.Unify.Binding.ST.Load
      AST.Unify.Constraints
      AST.Unify.Error
      AST.Unify.Generalize
      AST.Unify.Lookup
      AST.Unify.New
      AST.Unify.Occurs
      AST.Unify.QuantifiedVar
      AST.Unify.Term
      Data.Constraint.List
      Data.TyFun
  other-modules:
      Paths_syntax_tree
  hs-source-dirs:
      src
  ghc-options: -O2 -Wall -Wnoncanonical-monad-instances -Wcompat -Wincomplete-record-updates -Wincomplete-uni-patterns -Wredundant-constraints
  ghc-prof-options: -O2
  build-depends:
      QuickCheck
    , array
    , base
    , base-compat
    , binary
    , constraints
    , containers
    , deepseq
    , generic-data
    , lattices
    , lens
    , monad-st
    , mtl
    , pretty
    , show-combinators
    , template-haskell
    , th-abstraction >=0.3
    , transformers
  default-language: Haskell2010

test-suite syntax-tree-test
  type: exitcode-stdio-1.0
  main-is: Spec.hs
  other-modules:
      LangA
      LangA.Pure
      LangB
      LangB.Pure
      TypeLang
      TypeLang.Pure
  hs-source-dirs:
      test
  ghc-options: -Wall -Wcompat -threaded -rtsopts -with-rtsopts=-N
  build-depends:
      base
    , constraints
    , containers
    , generic-data
    , lattices
    , lens
    , monad-st
    , mtl
    , pretty
    , syntax-tree
    , transformers
  default-language: Haskell2010

benchmark syntax-tree-bench
  type: exitcode-stdio-1.0
  main-is: Benchmark.hs
  other-modules:
      LangB
      TypeLang
      TypeLang.Pure
  hs-source-dirs:
      test
  ghc-options: -O2 -Wall -Wnoncanonical-monad-instances -Wcompat -Wincomplete-record-updates -Wincomplete-uni-patterns -Wredundant-constraints
  build-depends:
      base
    , constraints
    , containers
    , criterion
    , generic-data
    , lattices
    , lens
    , monad-st
    , mtl
    , pretty
    , syntax-tree
    , transformers
  default-language: Haskell2010
